if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi
export ZSH="$HOME/.oh-my-zsh"
ZSH_THEME="powerlevel10k/powerlevel10k"
plugins=(git zsh-autosuggestions zsh-syntax-highlighting web-search)
source $ZSH/oh-my-zsh.sh
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh


#fzf
eval "$(fzf --zsh)"

#setup fzf theme
fg="#CBE0F0"
bg="#011628"
bg_highlight="#143652"
purple="#B388FF"
blue="#06BCE4"
cyan="#2CF9ED"

export FZF_DEFAULT_OPTS="--color=fg:${fg},bg:${bg},hl:${purple},fg+:${fg},bg+:${bg_highlight},hl+:${purple},info:${blue},prompt:${cyan},pointer:${cyan},marker:${cyan},spinner:${cyan},header:${cyan}"

#fd instead of fzf
export FZF_DEFAULT_COMMAND="fd --hidden --strip-cwd-prefix --exclude .git"
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
export FZF_ALT_C_COMMAND="fd --type=d --hidden --strip-cwd-prefix --exclude .git"

_fzf_compgen_path() {fd --hidden --exclude .git . "$1"}

#fd to generate the list for directory completion
_fzf_compgen_dir() {fd --type=d --hidden --exclude .git . "$1"}

source ~/fzf-git.sh/fzf-git.sh

show_file_or_dir_preview="if [ -d {} ]; then eza --tree --color=always {} | head -200; else bat -n --color=always --line-range :500 {}; fi"

export FZF_CTRL_T_OPTS="--preview '$show_file_or_dir_preview'"
export FZF_ALT_C_OPTS="--preview 'eza --tree --color=always {} | head -200'"

_fzf_comprun() {
  local command=$1
  shift

  case "$command" in
    cd)           fzf --preview 'eza --tree --color=always {} | head -200' "$@" ;;
    export|unset) fzf --preview "eval 'echo \${}'"         "$@" ;;
    ssh)          fzf --preview 'dig {}'                   "$@" ;;
    *)            fzf --preview "$show_file_or_dir_preview" "$@" ;;
  esac
}

#bat:
export BAT_THEME=tokyonight_night

#eza
alias ls="eza --color=always --long --no-filesize --icons=always --no-time --no-user --no-permissions"
alias la="eza --color=always --long --no-filesize --icons=always --no-time --no-user --no-permissions -all"
alias ll="eza --color=always --long --icons=always"
alias lg="eza --color=always --long --icons=always --no-time --no-permissions --git"
alias tr="eza --color=always --long --no-filesize --icons=always --no-time --no-user --no-permissions --tree"
t() {eza --color=always --long --no-filesize --icons=always --no-time --no-user --no-permissions --tree --level="$1"}
lw() {ls "$1" -1 | wc -l} 

#thefuck alias
eval $(thefuck --alias)
eval $(thefuck --alias fk)

#zoxide
eval "$(zoxide init zsh)"
alias cd="z"


#key Binds:
bindkey -e
bindkey '\e\e[C' forward-word
bindkey '\e\e[D' backward-word 
bindkey '¬' forward-word
bindkey '˙' backward-word


#aliases:
alias m="diskutil mount"
alias um="diskutil unmount"
alias ms="diskutil mount DIS_F429ZI"
alias ums="diskutil unmount DIS_F429ZI"
alias d="diskutil list"
alias sc="screen /dev/cu.usbmodem143203 115200"
alias fl="~/projects/stm/stm32f429/flash/flash.sh"
alias a="alias"
alias b="brew"
alias bi="brew install"
alias mkd="mkdir"
working_dir="~/projects/stm/stm32f429"
alias mka="make all -C $working_dir/make/"
alias mkasm="make asm -C $working_dir/make/"
alias mkc="make clean -C $working_dir/make/"
alias mkf="make flash -C $working_dir/make/"
alias mkfc="$working_dir/flash/flash.sh"
alias v="nvim"
alias s="source"
alias vz="nvim ~/.zshrc"
alias sz="source ~/.zshrc"
alias vt="nvim ~/.config/tmux/tmux.conf"
alias st="tmux source ~/.config/tmux/tmux.conf"
alias vs="nvim ~/.screenrc"
alias c="clear"
# alias t="tree"
alias rm="rm -rf"
alias cp="cp -r"
alias p="cd ~/projects/"
alias pc="cd ~/projects/stm/stm32f429/"
alias ~="cd ~"
alias ±="~"
alias ..="cd .."
alias ...="cd ../.."
alias ....="cd ../../.."
alias .....="cd ../../../.."
alias ......="cd ../../../../.."
alias to="touch"
alias mkd="mkdir"
alias grp="grep -in"
f() {find . -name "$1"}
# alias ll="ls -l"
# alias la="ls -la"
cdls() {cd "$1" && ls}
cdll() {cd "$1" && ll}
cdla() {cd "$1" && la}
mkcd() {mkdir -p "$1" && cd "$1"}
#tmux:
alias tm="tmux"
alias tn="tmux new -s"
alias tx="tmux kill-session -t"
alias txa="tmux kill-session -a"
alias ta="tmux attach"
alias tt="tmux attach -t"
alias tl="tmux ls"
#git:
alias gco="git checkout"
alias gcb="git checkout -b"
alias gb="git branch"
alias gbr="git branch -r"
alias gbv="git branch -vv"
alias gba='git branch -a'
alias gbd="git branch -d"
alias gbrd="git push cloud --delete"
alias gsw="git switch"
alias gswm="git switch main"
alias gswd="git switch develop"
alias gswdo="git switch docs"
alias gs="git status"
alias ga="git add"
alias gap='git add -p'
alias gc="git commit -m"
alias gca="git commit -a -m"
alias gl="git log --graph --decorate --all --topo-order --pretty='%w(100,0,6)%C(yellow)%h%C(bold)%C(blue)%d %C(cyan)%ar %C(green)%an%n%C(bold)%C(white)%s %N' --abbrev-commit"
alias gll="git log"
alias gp="git push"
unalias gpu
alias gpu="git push -u cloud"
alias gpl="git pull"
alias grs="git restore --staged"
alias grf="git restore"
alias gcll="git clone"
unalias gcl
gcl() {git clone --recurse-submodules git@github.com:ahmedaaali/"$1".git && cd "$1"}
unalias gra
gra() {git init && git remote add origin git@github.com:ahmedaaali/"$1".git}
unalias gr
gr() {git reset --soft HEAD~"$1"}
gahmed() {echo ".DS_Store" >> .gitignore && git add .gitignore && git remote rename origin cloud && git branch -m main && git commit --allow-empty -m "Initial commit" && git push -u cloud main}
gcustom() {echo ".DS_Store" >> .gitignore && git add .gitignore && git remote rename origin "$1" && git branch -m main && git commit --allow-empty -m "Initial commit" && git push -u "$1" main}
gsa() {git submodule add -b main git@github.com:ahmedaaali/"$1".git}
# gn() {git branch -m ""$1"_"$2"" && git checkout main && git pull && git checkout -b "$1"}
#docker
alias dc="docker compose"
alias dp="docker ps"
alias dpa="docker ps -a"
alias dl="docker ps -l -q"
alias dx="docker exec -it"

# export STM32_PRG_PATH=/Applications/STMicroelectronics/STM32Cube/STM32CubeProgrammer/STM32CubeProgrammer.app/Contents/MacOs/bin
# export PATH="/usr/local/opt/make/libexec/gnubin:$PATH"
# export PATH="/usr/local/opt/gnu-sed/libexec/gnubin:$PATH"
# export PATH="/usr/local/bin:$PATH"
# export LIBRARY_PATH="/usr/local/opt/gettext/lib:$LIBRARY_PATH"
# export PKG_CONFIG_PATH="/usr/local/opt/ncurses/lib/pkgconfig:$PKG_CONFIG_PATH"
# export CPATH="/usr/local/opt/gettext/include:$CPATH"
export PATH="/usr/local/opt/llvm/bin:$PATH"
alias make='/usr/local/bin/gmake'
# export PATH="/usr/local/Cellar/llvm/<version>/bin:$PATH"
